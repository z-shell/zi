---
name: "✅ Zsh"
on:
  push:
    branches: [main]
    tags: ["v*.*.*"]
    paths: ["zi.zsh", "lib/**"]
  pull_request:
    branches: [main]
    paths: ["zi.zsh", "lib/**"]
  workflow_run:
    workflows:
      - "⭕ Trunk"
    types:
      - completed
    branches: [main]
  workflow_dispatch: {}

jobs:
  zsh-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v3
      - name: "Set matrix output"
        id: set-matrix
        run: |
          MATRIX="$(find . -type d -name 'doc' -prune -o -type f \( -iname '*.zsh' -o -iname '_zi' \) -print | jq -ncR '{"include": [{"file": inputs}]}')"
          echo "MATRIX=${MATRIX}" >&2
          echo "::set-output name=matrix::${MATRIX}"
  zsh-n:
    runs-on: ubuntu-latest
    needs: zsh-matrix
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.zsh-matrix.outputs.matrix) }}
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v3
      - name: "⚡ Install dependencies"
        run: sudo apt update && sudo apt-get install -yq zsh
      - name: "⚡ zsh -n: ${{ matrix.file }}"
        env:
          ZSH_FILE: ${{ matrix.file }}
        run: |
          zsh -n "${ZSH_FILE}"
      - name: "⚡ zcompile ${{ matrix.file }}"
        env:
          ZSH_FILE: ${{ matrix.file }}
        run: |
          zsh -fc "zcompile ${ZSH_FILE}"; rc=$?
          ls -al "${ZSH_FILE}.zwc"; exit "$rc"
